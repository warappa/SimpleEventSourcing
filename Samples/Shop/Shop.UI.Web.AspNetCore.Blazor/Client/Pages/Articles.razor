@page "/articles"
@using Shop.UI.Web.AspNetCore.Blazor.Shared
@inject HttpClient Http
@inject IDialogService DialogService

<h1>Articles</h1>
<div class="mb-6">
    @if (articles == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div>
            <MudButton Variant="Variant.Text" OnClick="e => createArticleVisible = true"><MudIcon Icon="@Icons.Material.Filled.Add"></MudIcon></MudButton>
        </div>
        
        <MudSimpleTable>
            <thead>
                <tr>
                    <th>Article</th>
                    <th>Price</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var article in articles)
                {
                    <tr>
                        <td>
                            <div style="background: @(article.Active ? "green" : "red");display:inline-block; border-radius: 10px;width: 10px; height: 10px;"></div>
                            @article.Description (@article.Articlenumber)
                        </td>
                        <td>
                            @article.PriceValue @article.PriceIsoCode
                        </td>
                        <td style="width:50px;">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Link="@($"/articles/{article.ArticleId}")"></MudIconButton>
                        </td>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
        <MudDialog @bind-IsVisible="createArticleVisible">
            <TitleContent>
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3" /> Create Article
                </MudText>
            </TitleContent>
            <DialogContent>
                <EditForm Model="CreateArticle" OnValidSubmit="@CreateArticleAsync">

                    <MudTextField @bind-Value="CreateArticle.Articlenumber" Label="Article number"></MudTextField>

                    <MudTextField @bind-Value="CreateArticle.Description" Label="Description"></MudTextField>

                    <MudTextField @bind-Value="CreateArticle.PriceValue" Label="Price"></MudTextField>

                    <MudSelect T="string"
                               @bind-Value="CreateArticle.PriceIsoCode"
                               Label="Currency (EUR,...)">
                        <MudSelectItem T="string" Value="@("EUR")"></MudSelectItem>
                        <MudSelectItem T="string" Value="@("USD")"></MudSelectItem>
                    </MudSelect>
                </EditForm>
            </DialogContent>
            <DialogActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="CreateArticleAsync" Class="px-10">Create</MudButton>
            </DialogActions>
        </MudDialog>
    }
</div>
@code {
    private ArticleViewModel[] articles;

    private bool createArticleVisible = false;
    private CreateArticle CreateArticle = new CreateArticle
    {
        Id = Guid.NewGuid().ToString()
    };

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    private async Task LoadAsync()
    {
        articles = await Http.GetFromJsonAsync<ArticleViewModel[]>("api/articles");
    }

    protected async Task CreateArticleAsync()
    {
        await Http.PostAsJsonAsync("api/articles/CreateArticle", CreateArticle);

        CreateArticle = new CreateArticle
        {
            Id = Guid.NewGuid().ToString()
        };

        createArticleVisible = false;

        await LoadAsync();
    }

}
